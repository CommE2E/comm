name: iOS Build/Archive/Upload to AppStore Connect

on:
  push:
    tags:
      - mobile-**

jobs:
  build:
    name: Build, archive, and upload iOS app
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Developer certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: brew install protobuf
        run: brew install protobuf

      - name: yarn ci-cleaninstall
        run: yarn ci-cleaninstall

      - name: Save ALCHEMY_API_KEY to file
        working-directory: ./native
        env:
          ALCHEMY_API_KEY: ${{secrets.ALCHEMY_API_KEY}}
        run: mkdir -p facts && echo '{"key":"'"$ALCHEMY_API_KEY"'"}' > facts/alchemy.json

      - name: Save auth_key to file
        working-directory: ./native/ios
        env:
          AUTH_KEY: ${{secrets.AUTH_KEY}}
        run: echo "$AUTH_KEY" > AUTH_KEY.p8

      - name: Archive
        working-directory: ./native/ios
        env:
          AUTH_KEY_ID: ${{secrets.AUTH_KEY_ID}}
          AUTH_KEY_ISSUER_ID: ${{secrets.AUTH_KEY_ISSUER_ID}}
        run: xcodebuild archive -workspace Comm.xcworkspace -scheme Comm -configuration Release -archivePath archives/Comm.xcarchive -destination generic/platform=iOS -allowProvisioningUpdates -authenticationKeyIssuerID "$AUTH_KEY_ISSUER_ID" -authenticationKeyID "$AUTH_KEY_ID" -authenticationKeyPath $PWD/AUTH_KEY.p8

      - name: Export IPA
        working-directory: ./native/ios
        env:
          AUTH_KEY_ID: ${{secrets.AUTH_KEY_ID}}
          AUTH_KEY_ISSUER_ID: ${{secrets.AUTH_KEY_ISSUER_ID}}
        run: xcodebuild -exportArchive -archivePath archives/Comm.xcarchive -exportOptionsPlist exportOptions.plist -exportPath output -allowProvisioningUpdates -authenticationKeyIssuerID "$AUTH_KEY_ISSUER_ID" -authenticationKeyID "$AUTH_KEY_ID" -authenticationKeyPath $PWD/AUTH_KEY.p8

      - name: Upload IPA to TestFlight
        working-directory: ./native/ios
        env:
          APPLE_USER_NAME: ${{secrets.APPLE_USER_NAME}}
          APPLE_APP_SPECIFIC_PASSWORD: ${{secrets.APPLE_APP_SPECIFIC_PASSWORD}}
        run: xcrun altool --upload-app --type ios --file output/Comm.ipa --username "$APPLE_USER_NAME" --password "$APPLE_APP_SPECIFIC_PASSWORD"

      - name: Clean up keychain
        if: ${{ always() }}
        run: security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
