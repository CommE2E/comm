// @flow

import { defaultEmojiAvatars } from './avatar-utils.js';
import { onlyOneEmojiRegex } from './emojis.js';

describe('onlyOneEmojiRegex', () => {
  it('should match for (üëç)', () => {
    expect('üëç').toMatch(onlyOneEmojiRegex);
  });

  it('should match for (ü´°)', () => {
    expect('ü´°').toMatch(onlyOneEmojiRegex);
  });

  it('should match for (ü¶∂üèæ)', () => {
    expect('ü¶∂üèæ').toMatch(onlyOneEmojiRegex);
  });

  it('should not match for (ü¶∂üèæüôè)', () => {
    expect('ü¶∂üèæüôè').not.toMatch(onlyOneEmojiRegex);
  });

  it('should not match for (that is üî•)', () => {
    expect('that is üî•').not.toMatch(onlyOneEmojiRegex);
  });

  it('should match all defaultEmojiAvatars', () => {
    for (const emojiAvatar of defaultEmojiAvatars) {
      const { emoji } = emojiAvatar;
      expect(emoji).toMatch(onlyOneEmojiRegex);
    }
  });

  it('should not match when U+FE0F suffixed', () => {
    // See D8145 for more context
    expect('‚öìÔ∏è').not.toMatch(onlyOneEmojiRegex);
  });
});
