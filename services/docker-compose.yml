version: "3.9"
networks:
  services-net:
    name: services-net
services:
  # tunnelbroker
  tunnelbroker-server:
    build:
      dockerfile: services/tunnelbroker/Dockerfile
      context: ../
      args:
        - COMM_TEST_SERVICES=${COMM_TEST_SERVICES}
    image: commapp/tunnelbroker-server:0.2
    container_name: tunnelbroker-server
    ports:
      - "${COMM_SERVICES_PORT_TUNNELBROKER}:50051"
    volumes:
      - $HOME/.aws/config:/root/.aws/config:ro
      - $HOME/.aws/credentials:/root/.aws/credentials:ro
      - ./tunnelbroker/tunnelbroker.ini:/root/tunnelbroker/tunnelbroker.ini:ro
  # backup
  backup-server:
    networks:
      - services-net
    build:
      dockerfile: services/backup/Dockerfile
      context: ../
      args:
        - COMM_TEST_SERVICES=${COMM_TEST_SERVICES}
        - COMM_SERVICES_DEV_MODE=${COMM_SERVICES_DEV_MODE}
    image: commapp/backup-server:0.1
    container_name: backup-server
    ports:
      - "${COMM_SERVICES_PORT_BACKUP}:50051"
    volumes:
      - $HOME/.aws/credentials:/root/.aws/credentials:ro
  # blob
  blob-server:
    networks:
      - services-net
    build:
      dockerfile: services/blob/Dockerfile
      context: ../
      args:
        - COMM_TEST_SERVICES=${COMM_TEST_SERVICES}
        - COMM_SERVICES_DEV_MODE=${COMM_SERVICES_DEV_MODE}
    image: commapp/blob-server:0.1
    container_name: blob-server
    ports:
      - "${COMM_SERVICES_PORT_BLOB}:50051"
    volumes:
      - $HOME/.aws/credentials:/root/.aws/credentials:ro
  # identity
  identity-server:
    networks:
      - services-net
    build:
      dockerfile: services/identity/Dockerfile
      context: ../
    image: commapp/identity-server:0.1
    container_name: identity-server
    ports:
      - "${COMM_SERVICES_PORT_IDENTITY}:50051"
