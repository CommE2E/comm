// @generated by the protocol buffer compiler.  DO NOT EDIT!
// source: backup.proto

#include "backup.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace backup {
constexpr FullAuthenticationRequestData::FullAuthenticationRequestData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requestbytes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FullAuthenticationRequestDataDefaultTypeInternal {
  constexpr FullAuthenticationRequestDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FullAuthenticationRequestDataDefaultTypeInternal() {}
  union {
    FullAuthenticationRequestData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FullAuthenticationRequestDataDefaultTypeInternal _FullAuthenticationRequestData_default_instance_;
constexpr SimpleAuthenticationRequestData::SimpleAuthenticationRequestData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : backupid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SimpleAuthenticationRequestDataDefaultTypeInternal {
  constexpr SimpleAuthenticationRequestDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SimpleAuthenticationRequestDataDefaultTypeInternal() {}
  union {
    SimpleAuthenticationRequestData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SimpleAuthenticationRequestDataDefaultTypeInternal _SimpleAuthenticationRequestData_default_instance_;
constexpr AuthenticationInformationData::AuthenticationInformationData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : authenticationmethod_(0)

  , _oneof_case_{}{}
struct AuthenticationInformationDataDefaultTypeInternal {
  constexpr AuthenticationInformationDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticationInformationDataDefaultTypeInternal() {}
  union {
    AuthenticationInformationData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticationInformationDataDefaultTypeInternal _AuthenticationInformationData_default_instance_;
constexpr CreateNewBackupRequest::CreateNewBackupRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct CreateNewBackupRequestDefaultTypeInternal {
  constexpr CreateNewBackupRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateNewBackupRequestDefaultTypeInternal() {}
  union {
    CreateNewBackupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateNewBackupRequestDefaultTypeInternal _CreateNewBackupRequest_default_instance_;
constexpr CreateNewBackupResponse::CreateNewBackupResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct CreateNewBackupResponseDefaultTypeInternal {
  constexpr CreateNewBackupResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateNewBackupResponseDefaultTypeInternal() {}
  union {
    CreateNewBackupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateNewBackupResponseDefaultTypeInternal _CreateNewBackupResponse_default_instance_;
constexpr SendLogRequest::SendLogRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : logdata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , authenticationdata_(nullptr){}
struct SendLogRequestDefaultTypeInternal {
  constexpr SendLogRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendLogRequestDefaultTypeInternal() {}
  union {
    SendLogRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendLogRequestDefaultTypeInternal _SendLogRequest_default_instance_;
constexpr RecoverBackupKeyRequest::RecoverBackupKeyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : authenticationdata_(nullptr){}
struct RecoverBackupKeyRequestDefaultTypeInternal {
  constexpr RecoverBackupKeyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RecoverBackupKeyRequestDefaultTypeInternal() {}
  union {
    RecoverBackupKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RecoverBackupKeyRequestDefaultTypeInternal _RecoverBackupKeyRequest_default_instance_;
constexpr RecoverBackupKeyResponse::RecoverBackupKeyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct RecoverBackupKeyResponseDefaultTypeInternal {
  constexpr RecoverBackupKeyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RecoverBackupKeyResponseDefaultTypeInternal() {}
  union {
    RecoverBackupKeyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RecoverBackupKeyResponseDefaultTypeInternal _RecoverBackupKeyResponse_default_instance_;
constexpr PullBackupRequest::PullBackupRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : authenticationdata_(nullptr){}
struct PullBackupRequestDefaultTypeInternal {
  constexpr PullBackupRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PullBackupRequestDefaultTypeInternal() {}
  union {
    PullBackupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PullBackupRequestDefaultTypeInternal _PullBackupRequest_default_instance_;
constexpr PullBackupResponse::PullBackupResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct PullBackupResponseDefaultTypeInternal {
  constexpr PullBackupResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PullBackupResponseDefaultTypeInternal() {}
  union {
    PullBackupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PullBackupResponseDefaultTypeInternal _PullBackupResponse_default_instance_;
}  // namespace backup
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_backup_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_backup_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_backup_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_backup_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::FullAuthenticationRequestData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::backup::FullAuthenticationRequestData, requestbytes_),
  PROTOBUF_FIELD_OFFSET(::backup::FullAuthenticationRequestData, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::SimpleAuthenticationRequestData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::backup::SimpleAuthenticationRequestData, backupid_),
  PROTOBUF_FIELD_OFFSET(::backup::SimpleAuthenticationRequestData, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::AuthenticationInformationData, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::backup::AuthenticationInformationData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::backup::AuthenticationInformationData, authenticationmethod_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::backup::AuthenticationInformationData, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::CreateNewBackupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::backup::CreateNewBackupRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::backup::CreateNewBackupRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::CreateNewBackupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::backup::CreateNewBackupResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::backup::CreateNewBackupResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::SendLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::backup::SendLogRequest, authenticationdata_),
  PROTOBUF_FIELD_OFFSET(::backup::SendLogRequest, logdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::RecoverBackupKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::backup::RecoverBackupKeyRequest, authenticationdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::RecoverBackupKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::backup::RecoverBackupKeyResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::backup::RecoverBackupKeyResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::PullBackupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::backup::PullBackupRequest, authenticationdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backup::PullBackupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::backup::PullBackupResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::backup::PullBackupResponse, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::backup::FullAuthenticationRequestData)},
  { 7, -1, sizeof(::backup::SimpleAuthenticationRequestData)},
  { 14, -1, sizeof(::backup::AuthenticationInformationData)},
  { 23, -1, sizeof(::backup::CreateNewBackupRequest)},
  { 32, -1, sizeof(::backup::CreateNewBackupResponse)},
  { 40, -1, sizeof(::backup::SendLogRequest)},
  { 47, -1, sizeof(::backup::RecoverBackupKeyRequest)},
  { 53, -1, sizeof(::backup::RecoverBackupKeyResponse)},
  { 62, -1, sizeof(::backup::PullBackupRequest)},
  { 68, -1, sizeof(::backup::PullBackupResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_FullAuthenticationRequestData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_SimpleAuthenticationRequestData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_AuthenticationInformationData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_CreateNewBackupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_CreateNewBackupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_SendLogRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_RecoverBackupKeyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_RecoverBackupKeyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_PullBackupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::backup::_PullBackupResponse_default_instance_),
};

const char descriptor_table_protodef_backup_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014backup.proto\022\006backup\032\033google/protobuf/"
  "empty.proto\"E\n\035FullAuthenticationRequest"
  "Data\022\024\n\014requestBytes\030\001 \001(\014\022\016\n\006userID\030\002 \001"
  "(\t\"C\n\037SimpleAuthenticationRequestData\022\020\n"
  "\010backupID\030\001 \001(\t\022\016\n\006userID\030\002 \001(\t\"\212\001\n\035Auth"
  "enticationInformationData\022:\n\024authenticat"
  "ionMethod\030\001 \001(\0162\034.backup.AuthenticationM"
  "ethod\022\017\n\005nonce\030\002 \001(\014H\000\022\024\n\nrawMessage\030\003 \001"
  "(\014H\000B\006\n\004data\"\332\001\n\026CreateNewBackupRequest\022"
  "J\n\031authenticationRequestData\030\001 \001(\0132%.bac"
  "kup.FullAuthenticationRequestDataH\000\022N\n\035a"
  "uthenticationInformationData\030\002 \001(\0132%.bac"
  "kup.AuthenticationInformationDataH\000\022\034\n\022n"
  "ewCompactionChunk\030\003 \001(\014H\000B\006\n\004data\"N\n\027Cre"
  "ateNewBackupResponse\022\027\n\rresponseBytes\030\001 "
  "\001(\014H\000\022\022\n\010backupID\030\002 \001(\tH\000B\006\n\004data\"f\n\016Sen"
  "dLogRequest\022C\n\022authenticationData\030\001 \001(\0132"
  "\'.backup.SimpleAuthenticationRequestData"
  "\022\017\n\007logData\030\002 \001(\014\"\\\n\027RecoverBackupKeyReq"
  "uest\022A\n\022authenticationData\030\001 \001(\0132%.backu"
  "p.FullAuthenticationRequestData\"\237\001\n\030Reco"
  "verBackupKeyResponse\022\027\n\rresponseBytes\030\001 "
  "\001(\014H\000\022N\n\035authenticationInformationData\030\002"
  " \001(\0132%.backup.AuthenticationInformationD"
  "ataH\000\022\022\n\010backupID\030\003 \001(\tH\000B\006\n\004data\"X\n\021Pul"
  "lBackupRequest\022C\n\022authenticationData\030\001 \001"
  "(\0132\'.backup.SimpleAuthenticationRequestD"
  "ata\"K\n\022PullBackupResponse\022\031\n\017compactionC"
  "hunk\030\001 \001(\014H\000\022\022\n\010logChunk\030\002 \001(\014H\000B\006\n\004data"
  "*0\n\024AuthenticationMethod\022\014\n\010PASSWORD\020\000\022\n"
  "\n\006WALLET\020\0012\320\002\n\rBackupService\022X\n\017CreateNe"
  "wBackup\022\036.backup.CreateNewBackupRequest\032"
  "\037.backup.CreateNewBackupResponse\"\000(\0010\001\022="
  "\n\007SendLog\022\026.backup.SendLogRequest\032\026.goog"
  "le.protobuf.Empty\"\000(\001\022[\n\020RecoverBackupKe"
  "y\022\037.backup.RecoverBackupKeyRequest\032 .bac"
  "kup.RecoverBackupKeyResponse\"\000(\0010\001\022I\n\nPu"
  "llBackup\022\031.backup.PullBackupRequest\032\032.ba"
  "ckup.PullBackupResponse\"\000(\0010\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_backup_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_backup_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_backup_2eproto = {
  false, false, 1557, descriptor_table_protodef_backup_2eproto, "backup.proto", 
  &descriptor_table_backup_2eproto_once, descriptor_table_backup_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_backup_2eproto::offsets,
  file_level_metadata_backup_2eproto, file_level_enum_descriptors_backup_2eproto, file_level_service_descriptors_backup_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_backup_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_backup_2eproto);
  return descriptor_table_backup_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_backup_2eproto(&descriptor_table_backup_2eproto);
namespace backup {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AuthenticationMethod_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_backup_2eproto);
  return file_level_enum_descriptors_backup_2eproto[0];
}
bool AuthenticationMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class FullAuthenticationRequestData::_Internal {
 public:
};

FullAuthenticationRequestData::FullAuthenticationRequestData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.FullAuthenticationRequestData)
}
FullAuthenticationRequestData::FullAuthenticationRequestData(const FullAuthenticationRequestData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  requestbytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestbytes().empty()) {
    requestbytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestbytes(), 
      GetArena());
  }
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_userid().empty()) {
    userid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_userid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:backup.FullAuthenticationRequestData)
}

void FullAuthenticationRequestData::SharedCtor() {
requestbytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FullAuthenticationRequestData::~FullAuthenticationRequestData() {
  // @@protoc_insertion_point(destructor:backup.FullAuthenticationRequestData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FullAuthenticationRequestData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  requestbytes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FullAuthenticationRequestData::ArenaDtor(void* object) {
  FullAuthenticationRequestData* _this = reinterpret_cast< FullAuthenticationRequestData* >(object);
  (void)_this;
}
void FullAuthenticationRequestData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FullAuthenticationRequestData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FullAuthenticationRequestData::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.FullAuthenticationRequestData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestbytes_.ClearToEmpty();
  userid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FullAuthenticationRequestData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes requestBytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_requestbytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_userid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "backup.FullAuthenticationRequestData.userID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FullAuthenticationRequestData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.FullAuthenticationRequestData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes requestBytes = 1;
  if (this->requestbytes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_requestbytes(), target);
  }

  // string userID = 2;
  if (this->userid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userid().data(), static_cast<int>(this->_internal_userid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backup.FullAuthenticationRequestData.userID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_userid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.FullAuthenticationRequestData)
  return target;
}

size_t FullAuthenticationRequestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.FullAuthenticationRequestData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes requestBytes = 1;
  if (this->requestbytes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_requestbytes());
  }

  // string userID = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FullAuthenticationRequestData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.FullAuthenticationRequestData)
  GOOGLE_DCHECK_NE(&from, this);
  const FullAuthenticationRequestData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FullAuthenticationRequestData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.FullAuthenticationRequestData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.FullAuthenticationRequestData)
    MergeFrom(*source);
  }
}

void FullAuthenticationRequestData::MergeFrom(const FullAuthenticationRequestData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.FullAuthenticationRequestData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestbytes().size() > 0) {
    _internal_set_requestbytes(from._internal_requestbytes());
  }
  if (from.userid().size() > 0) {
    _internal_set_userid(from._internal_userid());
  }
}

void FullAuthenticationRequestData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.FullAuthenticationRequestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FullAuthenticationRequestData::CopyFrom(const FullAuthenticationRequestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.FullAuthenticationRequestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FullAuthenticationRequestData::IsInitialized() const {
  return true;
}

void FullAuthenticationRequestData::InternalSwap(FullAuthenticationRequestData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  requestbytes_.Swap(&other->requestbytes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  userid_.Swap(&other->userid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FullAuthenticationRequestData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SimpleAuthenticationRequestData::_Internal {
 public:
};

SimpleAuthenticationRequestData::SimpleAuthenticationRequestData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.SimpleAuthenticationRequestData)
}
SimpleAuthenticationRequestData::SimpleAuthenticationRequestData(const SimpleAuthenticationRequestData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  backupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_backupid().empty()) {
    backupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_backupid(), 
      GetArena());
  }
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_userid().empty()) {
    userid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_userid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:backup.SimpleAuthenticationRequestData)
}

void SimpleAuthenticationRequestData::SharedCtor() {
backupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SimpleAuthenticationRequestData::~SimpleAuthenticationRequestData() {
  // @@protoc_insertion_point(destructor:backup.SimpleAuthenticationRequestData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SimpleAuthenticationRequestData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  backupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SimpleAuthenticationRequestData::ArenaDtor(void* object) {
  SimpleAuthenticationRequestData* _this = reinterpret_cast< SimpleAuthenticationRequestData* >(object);
  (void)_this;
}
void SimpleAuthenticationRequestData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SimpleAuthenticationRequestData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SimpleAuthenticationRequestData::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.SimpleAuthenticationRequestData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  backupid_.ClearToEmpty();
  userid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SimpleAuthenticationRequestData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string backupID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_backupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "backup.SimpleAuthenticationRequestData.backupID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_userid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "backup.SimpleAuthenticationRequestData.userID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SimpleAuthenticationRequestData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.SimpleAuthenticationRequestData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string backupID = 1;
  if (this->backupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_backupid().data(), static_cast<int>(this->_internal_backupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backup.SimpleAuthenticationRequestData.backupID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_backupid(), target);
  }

  // string userID = 2;
  if (this->userid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userid().data(), static_cast<int>(this->_internal_userid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backup.SimpleAuthenticationRequestData.userID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_userid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.SimpleAuthenticationRequestData)
  return target;
}

size_t SimpleAuthenticationRequestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.SimpleAuthenticationRequestData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string backupID = 1;
  if (this->backupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_backupid());
  }

  // string userID = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimpleAuthenticationRequestData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.SimpleAuthenticationRequestData)
  GOOGLE_DCHECK_NE(&from, this);
  const SimpleAuthenticationRequestData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SimpleAuthenticationRequestData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.SimpleAuthenticationRequestData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.SimpleAuthenticationRequestData)
    MergeFrom(*source);
  }
}

void SimpleAuthenticationRequestData::MergeFrom(const SimpleAuthenticationRequestData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.SimpleAuthenticationRequestData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.backupid().size() > 0) {
    _internal_set_backupid(from._internal_backupid());
  }
  if (from.userid().size() > 0) {
    _internal_set_userid(from._internal_userid());
  }
}

void SimpleAuthenticationRequestData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.SimpleAuthenticationRequestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimpleAuthenticationRequestData::CopyFrom(const SimpleAuthenticationRequestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.SimpleAuthenticationRequestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleAuthenticationRequestData::IsInitialized() const {
  return true;
}

void SimpleAuthenticationRequestData::InternalSwap(SimpleAuthenticationRequestData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  backupid_.Swap(&other->backupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  userid_.Swap(&other->userid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SimpleAuthenticationRequestData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AuthenticationInformationData::_Internal {
 public:
};

AuthenticationInformationData::AuthenticationInformationData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.AuthenticationInformationData)
}
AuthenticationInformationData::AuthenticationInformationData(const AuthenticationInformationData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  authenticationmethod_ = from.authenticationmethod_;
  clear_has_data();
  switch (from.data_case()) {
    case kNonce: {
      _internal_set_nonce(from._internal_nonce());
      break;
    }
    case kRawMessage: {
      _internal_set_rawmessage(from._internal_rawmessage());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:backup.AuthenticationInformationData)
}

void AuthenticationInformationData::SharedCtor() {
authenticationmethod_ = 0;
clear_has_data();
}

AuthenticationInformationData::~AuthenticationInformationData() {
  // @@protoc_insertion_point(destructor:backup.AuthenticationInformationData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthenticationInformationData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void AuthenticationInformationData::ArenaDtor(void* object) {
  AuthenticationInformationData* _this = reinterpret_cast< AuthenticationInformationData* >(object);
  (void)_this;
}
void AuthenticationInformationData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticationInformationData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthenticationInformationData::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:backup.AuthenticationInformationData)
  switch (data_case()) {
    case kNonce: {
      data_.nonce_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kRawMessage: {
      data_.rawmessage_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void AuthenticationInformationData::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.AuthenticationInformationData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authenticationmethod_ = 0;
  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticationInformationData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .backup.AuthenticationMethod authenticationMethod = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_authenticationmethod(static_cast<::backup::AuthenticationMethod>(val));
        } else goto handle_unusual;
        continue;
      // bytes nonce = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_nonce();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes rawMessage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_rawmessage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthenticationInformationData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.AuthenticationInformationData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .backup.AuthenticationMethod authenticationMethod = 1;
  if (this->authenticationmethod() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_authenticationmethod(), target);
  }

  // bytes nonce = 2;
  if (_internal_has_nonce()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_nonce(), target);
  }

  // bytes rawMessage = 3;
  if (_internal_has_rawmessage()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_rawmessage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.AuthenticationInformationData)
  return target;
}

size_t AuthenticationInformationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.AuthenticationInformationData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .backup.AuthenticationMethod authenticationMethod = 1;
  if (this->authenticationmethod() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_authenticationmethod());
  }

  switch (data_case()) {
    // bytes nonce = 2;
    case kNonce: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_nonce());
      break;
    }
    // bytes rawMessage = 3;
    case kRawMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_rawmessage());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticationInformationData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.AuthenticationInformationData)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticationInformationData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthenticationInformationData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.AuthenticationInformationData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.AuthenticationInformationData)
    MergeFrom(*source);
  }
}

void AuthenticationInformationData::MergeFrom(const AuthenticationInformationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.AuthenticationInformationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.authenticationmethod() != 0) {
    _internal_set_authenticationmethod(from._internal_authenticationmethod());
  }
  switch (from.data_case()) {
    case kNonce: {
      _internal_set_nonce(from._internal_nonce());
      break;
    }
    case kRawMessage: {
      _internal_set_rawmessage(from._internal_rawmessage());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void AuthenticationInformationData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.AuthenticationInformationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticationInformationData::CopyFrom(const AuthenticationInformationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.AuthenticationInformationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationInformationData::IsInitialized() const {
  return true;
}

void AuthenticationInformationData::InternalSwap(AuthenticationInformationData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(authenticationmethod_, other->authenticationmethod_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationInformationData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateNewBackupRequest::_Internal {
 public:
  static const ::backup::FullAuthenticationRequestData& authenticationrequestdata(const CreateNewBackupRequest* msg);
  static const ::backup::AuthenticationInformationData& authenticationinformationdata(const CreateNewBackupRequest* msg);
};

const ::backup::FullAuthenticationRequestData&
CreateNewBackupRequest::_Internal::authenticationrequestdata(const CreateNewBackupRequest* msg) {
  return *msg->data_.authenticationrequestdata_;
}
const ::backup::AuthenticationInformationData&
CreateNewBackupRequest::_Internal::authenticationinformationdata(const CreateNewBackupRequest* msg) {
  return *msg->data_.authenticationinformationdata_;
}
void CreateNewBackupRequest::set_allocated_authenticationrequestdata(::backup::FullAuthenticationRequestData* authenticationrequestdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (authenticationrequestdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(authenticationrequestdata);
    if (message_arena != submessage_arena) {
      authenticationrequestdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authenticationrequestdata, submessage_arena);
    }
    set_has_authenticationrequestdata();
    data_.authenticationrequestdata_ = authenticationrequestdata;
  }
  // @@protoc_insertion_point(field_set_allocated:backup.CreateNewBackupRequest.authenticationRequestData)
}
void CreateNewBackupRequest::set_allocated_authenticationinformationdata(::backup::AuthenticationInformationData* authenticationinformationdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (authenticationinformationdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(authenticationinformationdata);
    if (message_arena != submessage_arena) {
      authenticationinformationdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authenticationinformationdata, submessage_arena);
    }
    set_has_authenticationinformationdata();
    data_.authenticationinformationdata_ = authenticationinformationdata;
  }
  // @@protoc_insertion_point(field_set_allocated:backup.CreateNewBackupRequest.authenticationInformationData)
}
CreateNewBackupRequest::CreateNewBackupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.CreateNewBackupRequest)
}
CreateNewBackupRequest::CreateNewBackupRequest(const CreateNewBackupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kAuthenticationRequestData: {
      _internal_mutable_authenticationrequestdata()->::backup::FullAuthenticationRequestData::MergeFrom(from._internal_authenticationrequestdata());
      break;
    }
    case kAuthenticationInformationData: {
      _internal_mutable_authenticationinformationdata()->::backup::AuthenticationInformationData::MergeFrom(from._internal_authenticationinformationdata());
      break;
    }
    case kNewCompactionChunk: {
      _internal_set_newcompactionchunk(from._internal_newcompactionchunk());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:backup.CreateNewBackupRequest)
}

void CreateNewBackupRequest::SharedCtor() {
clear_has_data();
}

CreateNewBackupRequest::~CreateNewBackupRequest() {
  // @@protoc_insertion_point(destructor:backup.CreateNewBackupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateNewBackupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void CreateNewBackupRequest::ArenaDtor(void* object) {
  CreateNewBackupRequest* _this = reinterpret_cast< CreateNewBackupRequest* >(object);
  (void)_this;
}
void CreateNewBackupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNewBackupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateNewBackupRequest::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:backup.CreateNewBackupRequest)
  switch (data_case()) {
    case kAuthenticationRequestData: {
      if (GetArena() == nullptr) {
        delete data_.authenticationrequestdata_;
      }
      break;
    }
    case kAuthenticationInformationData: {
      if (GetArena() == nullptr) {
        delete data_.authenticationinformationdata_;
      }
      break;
    }
    case kNewCompactionChunk: {
      data_.newcompactionchunk_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void CreateNewBackupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.CreateNewBackupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNewBackupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .backup.FullAuthenticationRequestData authenticationRequestData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationrequestdata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .backup.AuthenticationInformationData authenticationInformationData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationinformationdata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes newCompactionChunk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_newcompactionchunk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateNewBackupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.CreateNewBackupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .backup.FullAuthenticationRequestData authenticationRequestData = 1;
  if (_internal_has_authenticationrequestdata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::authenticationrequestdata(this), target, stream);
  }

  // .backup.AuthenticationInformationData authenticationInformationData = 2;
  if (_internal_has_authenticationinformationdata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::authenticationinformationdata(this), target, stream);
  }

  // bytes newCompactionChunk = 3;
  if (_internal_has_newcompactionchunk()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_newcompactionchunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.CreateNewBackupRequest)
  return target;
}

size_t CreateNewBackupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.CreateNewBackupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // .backup.FullAuthenticationRequestData authenticationRequestData = 1;
    case kAuthenticationRequestData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.authenticationrequestdata_);
      break;
    }
    // .backup.AuthenticationInformationData authenticationInformationData = 2;
    case kAuthenticationInformationData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.authenticationinformationdata_);
      break;
    }
    // bytes newCompactionChunk = 3;
    case kNewCompactionChunk: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_newcompactionchunk());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNewBackupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.CreateNewBackupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewBackupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateNewBackupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.CreateNewBackupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.CreateNewBackupRequest)
    MergeFrom(*source);
  }
}

void CreateNewBackupRequest::MergeFrom(const CreateNewBackupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.CreateNewBackupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kAuthenticationRequestData: {
      _internal_mutable_authenticationrequestdata()->::backup::FullAuthenticationRequestData::MergeFrom(from._internal_authenticationrequestdata());
      break;
    }
    case kAuthenticationInformationData: {
      _internal_mutable_authenticationinformationdata()->::backup::AuthenticationInformationData::MergeFrom(from._internal_authenticationinformationdata());
      break;
    }
    case kNewCompactionChunk: {
      _internal_set_newcompactionchunk(from._internal_newcompactionchunk());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void CreateNewBackupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.CreateNewBackupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewBackupRequest::CopyFrom(const CreateNewBackupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.CreateNewBackupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewBackupRequest::IsInitialized() const {
  return true;
}

void CreateNewBackupRequest::InternalSwap(CreateNewBackupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNewBackupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateNewBackupResponse::_Internal {
 public:
};

CreateNewBackupResponse::CreateNewBackupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.CreateNewBackupResponse)
}
CreateNewBackupResponse::CreateNewBackupResponse(const CreateNewBackupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kResponseBytes: {
      _internal_set_responsebytes(from._internal_responsebytes());
      break;
    }
    case kBackupID: {
      _internal_set_backupid(from._internal_backupid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:backup.CreateNewBackupResponse)
}

void CreateNewBackupResponse::SharedCtor() {
clear_has_data();
}

CreateNewBackupResponse::~CreateNewBackupResponse() {
  // @@protoc_insertion_point(destructor:backup.CreateNewBackupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateNewBackupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void CreateNewBackupResponse::ArenaDtor(void* object) {
  CreateNewBackupResponse* _this = reinterpret_cast< CreateNewBackupResponse* >(object);
  (void)_this;
}
void CreateNewBackupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNewBackupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateNewBackupResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:backup.CreateNewBackupResponse)
  switch (data_case()) {
    case kResponseBytes: {
      data_.responsebytes_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kBackupID: {
      data_.backupid_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void CreateNewBackupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.CreateNewBackupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNewBackupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes responseBytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_responsebytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string backupID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_backupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "backup.CreateNewBackupResponse.backupID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateNewBackupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.CreateNewBackupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes responseBytes = 1;
  if (_internal_has_responsebytes()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_responsebytes(), target);
  }

  // string backupID = 2;
  if (_internal_has_backupid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_backupid().data(), static_cast<int>(this->_internal_backupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backup.CreateNewBackupResponse.backupID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_backupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.CreateNewBackupResponse)
  return target;
}

size_t CreateNewBackupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.CreateNewBackupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // bytes responseBytes = 1;
    case kResponseBytes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_responsebytes());
      break;
    }
    // string backupID = 2;
    case kBackupID: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_backupid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNewBackupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.CreateNewBackupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewBackupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateNewBackupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.CreateNewBackupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.CreateNewBackupResponse)
    MergeFrom(*source);
  }
}

void CreateNewBackupResponse::MergeFrom(const CreateNewBackupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.CreateNewBackupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kResponseBytes: {
      _internal_set_responsebytes(from._internal_responsebytes());
      break;
    }
    case kBackupID: {
      _internal_set_backupid(from._internal_backupid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void CreateNewBackupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.CreateNewBackupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewBackupResponse::CopyFrom(const CreateNewBackupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.CreateNewBackupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewBackupResponse::IsInitialized() const {
  return true;
}

void CreateNewBackupResponse::InternalSwap(CreateNewBackupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNewBackupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SendLogRequest::_Internal {
 public:
  static const ::backup::SimpleAuthenticationRequestData& authenticationdata(const SendLogRequest* msg);
};

const ::backup::SimpleAuthenticationRequestData&
SendLogRequest::_Internal::authenticationdata(const SendLogRequest* msg) {
  return *msg->authenticationdata_;
}
SendLogRequest::SendLogRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.SendLogRequest)
}
SendLogRequest::SendLogRequest(const SendLogRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  logdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_logdata().empty()) {
    logdata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_logdata(), 
      GetArena());
  }
  if (from._internal_has_authenticationdata()) {
    authenticationdata_ = new ::backup::SimpleAuthenticationRequestData(*from.authenticationdata_);
  } else {
    authenticationdata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:backup.SendLogRequest)
}

void SendLogRequest::SharedCtor() {
logdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
authenticationdata_ = nullptr;
}

SendLogRequest::~SendLogRequest() {
  // @@protoc_insertion_point(destructor:backup.SendLogRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendLogRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  logdata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete authenticationdata_;
}

void SendLogRequest::ArenaDtor(void* object) {
  SendLogRequest* _this = reinterpret_cast< SendLogRequest* >(object);
  (void)_this;
}
void SendLogRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendLogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.SendLogRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logdata_.ClearToEmpty();
  if (GetArena() == nullptr && authenticationdata_ != nullptr) {
    delete authenticationdata_;
  }
  authenticationdata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendLogRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .backup.SimpleAuthenticationRequestData authenticationData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationdata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes logData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_logdata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendLogRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.SendLogRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .backup.SimpleAuthenticationRequestData authenticationData = 1;
  if (this->has_authenticationdata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::authenticationdata(this), target, stream);
  }

  // bytes logData = 2;
  if (this->logdata().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_logdata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.SendLogRequest)
  return target;
}

size_t SendLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.SendLogRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes logData = 2;
  if (this->logdata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_logdata());
  }

  // .backup.SimpleAuthenticationRequestData authenticationData = 1;
  if (this->has_authenticationdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authenticationdata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendLogRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.SendLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendLogRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendLogRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.SendLogRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.SendLogRequest)
    MergeFrom(*source);
  }
}

void SendLogRequest::MergeFrom(const SendLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.SendLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.logdata().size() > 0) {
    _internal_set_logdata(from._internal_logdata());
  }
  if (from.has_authenticationdata()) {
    _internal_mutable_authenticationdata()->::backup::SimpleAuthenticationRequestData::MergeFrom(from._internal_authenticationdata());
  }
}

void SendLogRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.SendLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendLogRequest::CopyFrom(const SendLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.SendLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendLogRequest::IsInitialized() const {
  return true;
}

void SendLogRequest::InternalSwap(SendLogRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  logdata_.Swap(&other->logdata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(authenticationdata_, other->authenticationdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendLogRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RecoverBackupKeyRequest::_Internal {
 public:
  static const ::backup::FullAuthenticationRequestData& authenticationdata(const RecoverBackupKeyRequest* msg);
};

const ::backup::FullAuthenticationRequestData&
RecoverBackupKeyRequest::_Internal::authenticationdata(const RecoverBackupKeyRequest* msg) {
  return *msg->authenticationdata_;
}
RecoverBackupKeyRequest::RecoverBackupKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.RecoverBackupKeyRequest)
}
RecoverBackupKeyRequest::RecoverBackupKeyRequest(const RecoverBackupKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authenticationdata()) {
    authenticationdata_ = new ::backup::FullAuthenticationRequestData(*from.authenticationdata_);
  } else {
    authenticationdata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:backup.RecoverBackupKeyRequest)
}

void RecoverBackupKeyRequest::SharedCtor() {
authenticationdata_ = nullptr;
}

RecoverBackupKeyRequest::~RecoverBackupKeyRequest() {
  // @@protoc_insertion_point(destructor:backup.RecoverBackupKeyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecoverBackupKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete authenticationdata_;
}

void RecoverBackupKeyRequest::ArenaDtor(void* object) {
  RecoverBackupKeyRequest* _this = reinterpret_cast< RecoverBackupKeyRequest* >(object);
  (void)_this;
}
void RecoverBackupKeyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecoverBackupKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RecoverBackupKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.RecoverBackupKeyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && authenticationdata_ != nullptr) {
    delete authenticationdata_;
  }
  authenticationdata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecoverBackupKeyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .backup.FullAuthenticationRequestData authenticationData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationdata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecoverBackupKeyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.RecoverBackupKeyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .backup.FullAuthenticationRequestData authenticationData = 1;
  if (this->has_authenticationdata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::authenticationdata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.RecoverBackupKeyRequest)
  return target;
}

size_t RecoverBackupKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.RecoverBackupKeyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .backup.FullAuthenticationRequestData authenticationData = 1;
  if (this->has_authenticationdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authenticationdata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoverBackupKeyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.RecoverBackupKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoverBackupKeyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecoverBackupKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.RecoverBackupKeyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.RecoverBackupKeyRequest)
    MergeFrom(*source);
  }
}

void RecoverBackupKeyRequest::MergeFrom(const RecoverBackupKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.RecoverBackupKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_authenticationdata()) {
    _internal_mutable_authenticationdata()->::backup::FullAuthenticationRequestData::MergeFrom(from._internal_authenticationdata());
  }
}

void RecoverBackupKeyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.RecoverBackupKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverBackupKeyRequest::CopyFrom(const RecoverBackupKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.RecoverBackupKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverBackupKeyRequest::IsInitialized() const {
  return true;
}

void RecoverBackupKeyRequest::InternalSwap(RecoverBackupKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(authenticationdata_, other->authenticationdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecoverBackupKeyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RecoverBackupKeyResponse::_Internal {
 public:
  static const ::backup::AuthenticationInformationData& authenticationinformationdata(const RecoverBackupKeyResponse* msg);
};

const ::backup::AuthenticationInformationData&
RecoverBackupKeyResponse::_Internal::authenticationinformationdata(const RecoverBackupKeyResponse* msg) {
  return *msg->data_.authenticationinformationdata_;
}
void RecoverBackupKeyResponse::set_allocated_authenticationinformationdata(::backup::AuthenticationInformationData* authenticationinformationdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (authenticationinformationdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(authenticationinformationdata);
    if (message_arena != submessage_arena) {
      authenticationinformationdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authenticationinformationdata, submessage_arena);
    }
    set_has_authenticationinformationdata();
    data_.authenticationinformationdata_ = authenticationinformationdata;
  }
  // @@protoc_insertion_point(field_set_allocated:backup.RecoverBackupKeyResponse.authenticationInformationData)
}
RecoverBackupKeyResponse::RecoverBackupKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.RecoverBackupKeyResponse)
}
RecoverBackupKeyResponse::RecoverBackupKeyResponse(const RecoverBackupKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kResponseBytes: {
      _internal_set_responsebytes(from._internal_responsebytes());
      break;
    }
    case kAuthenticationInformationData: {
      _internal_mutable_authenticationinformationdata()->::backup::AuthenticationInformationData::MergeFrom(from._internal_authenticationinformationdata());
      break;
    }
    case kBackupID: {
      _internal_set_backupid(from._internal_backupid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:backup.RecoverBackupKeyResponse)
}

void RecoverBackupKeyResponse::SharedCtor() {
clear_has_data();
}

RecoverBackupKeyResponse::~RecoverBackupKeyResponse() {
  // @@protoc_insertion_point(destructor:backup.RecoverBackupKeyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecoverBackupKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void RecoverBackupKeyResponse::ArenaDtor(void* object) {
  RecoverBackupKeyResponse* _this = reinterpret_cast< RecoverBackupKeyResponse* >(object);
  (void)_this;
}
void RecoverBackupKeyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecoverBackupKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RecoverBackupKeyResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:backup.RecoverBackupKeyResponse)
  switch (data_case()) {
    case kResponseBytes: {
      data_.responsebytes_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kAuthenticationInformationData: {
      if (GetArena() == nullptr) {
        delete data_.authenticationinformationdata_;
      }
      break;
    }
    case kBackupID: {
      data_.backupid_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void RecoverBackupKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.RecoverBackupKeyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecoverBackupKeyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes responseBytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_responsebytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .backup.AuthenticationInformationData authenticationInformationData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationinformationdata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string backupID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_backupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "backup.RecoverBackupKeyResponse.backupID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecoverBackupKeyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.RecoverBackupKeyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes responseBytes = 1;
  if (_internal_has_responsebytes()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_responsebytes(), target);
  }

  // .backup.AuthenticationInformationData authenticationInformationData = 2;
  if (_internal_has_authenticationinformationdata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::authenticationinformationdata(this), target, stream);
  }

  // string backupID = 3;
  if (_internal_has_backupid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_backupid().data(), static_cast<int>(this->_internal_backupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backup.RecoverBackupKeyResponse.backupID");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_backupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.RecoverBackupKeyResponse)
  return target;
}

size_t RecoverBackupKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.RecoverBackupKeyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // bytes responseBytes = 1;
    case kResponseBytes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_responsebytes());
      break;
    }
    // .backup.AuthenticationInformationData authenticationInformationData = 2;
    case kAuthenticationInformationData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.authenticationinformationdata_);
      break;
    }
    // string backupID = 3;
    case kBackupID: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_backupid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoverBackupKeyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.RecoverBackupKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoverBackupKeyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecoverBackupKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.RecoverBackupKeyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.RecoverBackupKeyResponse)
    MergeFrom(*source);
  }
}

void RecoverBackupKeyResponse::MergeFrom(const RecoverBackupKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.RecoverBackupKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kResponseBytes: {
      _internal_set_responsebytes(from._internal_responsebytes());
      break;
    }
    case kAuthenticationInformationData: {
      _internal_mutable_authenticationinformationdata()->::backup::AuthenticationInformationData::MergeFrom(from._internal_authenticationinformationdata());
      break;
    }
    case kBackupID: {
      _internal_set_backupid(from._internal_backupid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void RecoverBackupKeyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.RecoverBackupKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverBackupKeyResponse::CopyFrom(const RecoverBackupKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.RecoverBackupKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverBackupKeyResponse::IsInitialized() const {
  return true;
}

void RecoverBackupKeyResponse::InternalSwap(RecoverBackupKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecoverBackupKeyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PullBackupRequest::_Internal {
 public:
  static const ::backup::SimpleAuthenticationRequestData& authenticationdata(const PullBackupRequest* msg);
};

const ::backup::SimpleAuthenticationRequestData&
PullBackupRequest::_Internal::authenticationdata(const PullBackupRequest* msg) {
  return *msg->authenticationdata_;
}
PullBackupRequest::PullBackupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.PullBackupRequest)
}
PullBackupRequest::PullBackupRequest(const PullBackupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authenticationdata()) {
    authenticationdata_ = new ::backup::SimpleAuthenticationRequestData(*from.authenticationdata_);
  } else {
    authenticationdata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:backup.PullBackupRequest)
}

void PullBackupRequest::SharedCtor() {
authenticationdata_ = nullptr;
}

PullBackupRequest::~PullBackupRequest() {
  // @@protoc_insertion_point(destructor:backup.PullBackupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PullBackupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete authenticationdata_;
}

void PullBackupRequest::ArenaDtor(void* object) {
  PullBackupRequest* _this = reinterpret_cast< PullBackupRequest* >(object);
  (void)_this;
}
void PullBackupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PullBackupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PullBackupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.PullBackupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && authenticationdata_ != nullptr) {
    delete authenticationdata_;
  }
  authenticationdata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PullBackupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .backup.SimpleAuthenticationRequestData authenticationData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationdata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PullBackupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.PullBackupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .backup.SimpleAuthenticationRequestData authenticationData = 1;
  if (this->has_authenticationdata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::authenticationdata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.PullBackupRequest)
  return target;
}

size_t PullBackupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.PullBackupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .backup.SimpleAuthenticationRequestData authenticationData = 1;
  if (this->has_authenticationdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authenticationdata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullBackupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.PullBackupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PullBackupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PullBackupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.PullBackupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.PullBackupRequest)
    MergeFrom(*source);
  }
}

void PullBackupRequest::MergeFrom(const PullBackupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.PullBackupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_authenticationdata()) {
    _internal_mutable_authenticationdata()->::backup::SimpleAuthenticationRequestData::MergeFrom(from._internal_authenticationdata());
  }
}

void PullBackupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.PullBackupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullBackupRequest::CopyFrom(const PullBackupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.PullBackupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullBackupRequest::IsInitialized() const {
  return true;
}

void PullBackupRequest::InternalSwap(PullBackupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(authenticationdata_, other->authenticationdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PullBackupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PullBackupResponse::_Internal {
 public:
};

PullBackupResponse::PullBackupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:backup.PullBackupResponse)
}
PullBackupResponse::PullBackupResponse(const PullBackupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kCompactionChunk: {
      _internal_set_compactionchunk(from._internal_compactionchunk());
      break;
    }
    case kLogChunk: {
      _internal_set_logchunk(from._internal_logchunk());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:backup.PullBackupResponse)
}

void PullBackupResponse::SharedCtor() {
clear_has_data();
}

PullBackupResponse::~PullBackupResponse() {
  // @@protoc_insertion_point(destructor:backup.PullBackupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PullBackupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void PullBackupResponse::ArenaDtor(void* object) {
  PullBackupResponse* _this = reinterpret_cast< PullBackupResponse* >(object);
  (void)_this;
}
void PullBackupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PullBackupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PullBackupResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:backup.PullBackupResponse)
  switch (data_case()) {
    case kCompactionChunk: {
      data_.compactionchunk_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kLogChunk: {
      data_.logchunk_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void PullBackupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backup.PullBackupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PullBackupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes compactionChunk = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_compactionchunk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes logChunk = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_logchunk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PullBackupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backup.PullBackupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes compactionChunk = 1;
  if (_internal_has_compactionchunk()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_compactionchunk(), target);
  }

  // bytes logChunk = 2;
  if (_internal_has_logchunk()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_logchunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backup.PullBackupResponse)
  return target;
}

size_t PullBackupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backup.PullBackupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // bytes compactionChunk = 1;
    case kCompactionChunk: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_compactionchunk());
      break;
    }
    // bytes logChunk = 2;
    case kLogChunk: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_logchunk());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullBackupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:backup.PullBackupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PullBackupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PullBackupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:backup.PullBackupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:backup.PullBackupResponse)
    MergeFrom(*source);
  }
}

void PullBackupResponse::MergeFrom(const PullBackupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:backup.PullBackupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kCompactionChunk: {
      _internal_set_compactionchunk(from._internal_compactionchunk());
      break;
    }
    case kLogChunk: {
      _internal_set_logchunk(from._internal_logchunk());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void PullBackupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:backup.PullBackupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullBackupResponse::CopyFrom(const PullBackupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backup.PullBackupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullBackupResponse::IsInitialized() const {
  return true;
}

void PullBackupResponse::InternalSwap(PullBackupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PullBackupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace backup
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::backup::FullAuthenticationRequestData* Arena::CreateMaybeMessage< ::backup::FullAuthenticationRequestData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::FullAuthenticationRequestData >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::SimpleAuthenticationRequestData* Arena::CreateMaybeMessage< ::backup::SimpleAuthenticationRequestData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::SimpleAuthenticationRequestData >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::AuthenticationInformationData* Arena::CreateMaybeMessage< ::backup::AuthenticationInformationData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::AuthenticationInformationData >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::CreateNewBackupRequest* Arena::CreateMaybeMessage< ::backup::CreateNewBackupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::CreateNewBackupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::CreateNewBackupResponse* Arena::CreateMaybeMessage< ::backup::CreateNewBackupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::CreateNewBackupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::SendLogRequest* Arena::CreateMaybeMessage< ::backup::SendLogRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::SendLogRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::RecoverBackupKeyRequest* Arena::CreateMaybeMessage< ::backup::RecoverBackupKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::RecoverBackupKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::RecoverBackupKeyResponse* Arena::CreateMaybeMessage< ::backup::RecoverBackupKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::RecoverBackupKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::PullBackupRequest* Arena::CreateMaybeMessage< ::backup::PullBackupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::PullBackupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backup::PullBackupResponse* Arena::CreateMaybeMessage< ::backup::PullBackupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backup::PullBackupResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
