require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")

platform :ios, '12.0'

require 'json'

def common_comm_target_pods
  pod 'SQLCipher-Amalgamation', :path => '../../node_modules/@commapp/sqlcipher-amalgamation'
  pod 'gRPC-C++', :podspec => './pod-patch/.patched/gRPC-C++/1.40.0/gRPC-C++.podspec.json'
  pod 'gRPC-C++/Protobuf', :podspec => './pod-patch/.patched/gRPC-C++/1.40.0/gRPC-C++.podspec.json'
  pod 'gRPC-Core', :podspec => './pod-patch/.patched/gRPC-Core/1.40.0/gRPC-Core.podspec.json'
  pod 'Protobuf-C++', '3.15.8'
end

target 'Comm' do
  pod 'ReactNativeKeyboardTrackingView', :path => '../../node_modules/react-native-keyboard-tracking-view'
  pod 'ReactNativeKeyboardInput', :path => '../../node_modules/react-native-keyboard-input'
  pod 'react-native-video/VideoCaching', :podspec => '../../node_modules/react-native-video/react-native-video.podspec'
  pod 'react-native-ffmpeg/min-lts', :podspec => '../../node_modules/react-native-ffmpeg/react-native-ffmpeg.podspec'
  common_comm_target_pods

  use_expo_modules!
  config = use_native_modules!
  podfile_properties = JSON.parse(File.read('./Podfile.properties.json')) rescue {}
  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => podfile_properties['expo.jsEngine'] == 'hermes'
  )

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  use_flipper!({ "Flipper-DoubleConversion" => "1.1.7" })
end

target 'NotificationService' do
  common_comm_target_pods
  pod 'OLMKit', :path => "../../node_modules/olm"
  pod 'RCT-Folly', :podspec => "../../node_modules/react-native/third-party-podspecs/RCT-Folly.podspec"

  # Lines below are only needed to compile and use Expo Secure Store in Notification Service.
  # If Apple disapproves 'APPLICATION_EXTENSION_API_ONLY' flag then we can safely delete them and use 
  # customized Expo Secure Store that does not depend on ExpoModulesCore
  podfile_properties = JSON.parse(File.read('./Podfile.properties.json')) rescue {}
  use_expo_modules!
  use_react_native!(
    :path => "../../node_modules/react-native",
    :hermes_enabled => podfile_properties['expo.jsEngine'] == 'hermes'
  )
end

post_install do |installer|
  react_native_post_install(installer)
  __apply_Xcode_12_5_M1_post_install_workaround(installer)

  # Excluding arm64 because M1 simulator isn't supported yet
  # Excluding 32-bit x86 because nobody uses it and it causes compilation issues
  installer.pods_project.build_configurations.each do |config|
    config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64 i386"
    config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-DDONT_AUTOINSTALL_REANIMATED'
  end

  # Lines below are only needed to compile and use Expo Secure Store in Notification Service.
  # If Apple disapproves 'APPLICATION_EXTENSION_API_ONLY' flag then we can safely delete them and use 
  # customized Expo Secure Store that does not depend on ExpoModulesCore
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
    end
  end 
end
