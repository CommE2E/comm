require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
$podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

plugin 'cocoapods-swift-modular-headers'
$RNVideoUseVideoCaching = true
apply_modular_headers_for_swift_dependencies()

ENV['RCT_NEW_ARCH_ENABLED'] = '0' if $podfile_properties['newArchEnabled'] == 'false'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = $podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']
 
platform :ios, $podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods', :deterministic_uuids => false

prepare_react_native_project!

def common_comm_target_pods
  pod 'SQLCipher-Amalgamation', :path => '../../node_modules/@commapp/sqlcipher-amalgamation'
end

use_expo_modules!

if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
  config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
else
  config_command = [
    'npx',
    'expo-modules-autolinking',
    'react-native-config',
    '--json',
    '--platform',
    'ios'
  ]
end

config = use_native_modules!(config_command)

use_frameworks! :linkage => $podfile_properties['ios.useFrameworks'].to_sym if $podfile_properties['ios.useFrameworks']
use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

use_react_native!(
  :path => "../../node_modules/react-native",
  :hermes_enabled => $podfile_properties['expo.jsEngine'] == nil || $podfile_properties['expo.jsEngine'] == 'hermes',
  # An absolute path to your application root.
  :app_path => "#{Pod::Config.instance.installation_root}/..",
  :privacy_file_aggregation_enabled => $podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
)

target 'Comm' do
  common_comm_target_pods
  pod 'ReactNativeKeyboardTrackingView', :path => '../../node_modules/react-native-keyboard-tracking-view'
  pod 'ReactNativeKeyboardInput', :path => '../node_modules/react-native-keyboard-input'
  pod 'MMKV', '>= 1.3.5'
end

target 'NotificationService' do
  common_comm_target_pods
  pod 'OLMKit', :path => "../node_modules/olm"
  pod 'MMKVAppExtension', '>= 1.3.5'
end

post_install do |installer|
  react_native_post_install(
    installer,
    config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => $podfile_properties['apple.ccacheEnabled'] == 'true',
  )

  # Excluding arm64 because ARM-based Mac simulator isn't supported yet
  # Excluding 32-bit x86 because nobody uses it and it causes compilation issues
  installer.pods_project.build_configurations.each do |config|
    config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64 i386'
    config.build_settings['OTHER_CPLUSPLUSFLAGS'] =
      '-DDONT_AUTOINSTALL_REANIMATED -DFOLLY_MOBILE -DFOLLY_USE_LIBCPP -DFOLLY_NO_CONFIG -DFOLLY_CFG_NO_COROUTINES -DFOLLY_HAVE_CLOCK_GETTIME -DRNVERSION=77 -DREANIMATED_VERSION=3.18.0'
  end

  # Lines below are needed to compile Notification Service
  # which depends on RN code
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
    end
  end 
end
